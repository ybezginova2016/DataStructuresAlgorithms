# Divide and Conquer

# Скорость зависит от выбора опорного элемента

# Помните: мы используем стратегию «разделяй и властвуй» . Следовательно,
# массив должен разделяться до тех пор, пока мы не придем к базовому
# случаю.

# Алгоритм быстрой сортировки работает так: сначала в массиве
# выбирается элемент, который называется опорным.

# Этот процесс называется разделением. Теперь у вас имеются :
# 1) подмассив всех элементов, меньших опорного;
# 2) опорный элемент;
# 3) подмассив всех элементов, больших опорного.
def sum(arr):
    total = 0
    for i in arr:
        total += i
    return total

print(sum([1, -1]))

# Algorithm
# 1. Выбрать опорный элемент.
# 2. Разделить массив на два подмассива: элементы, меньшие опорного,
# и элементы, большие опорного.
# 3. Рекурсивно применить быструю сортировку к двум подмассивам.

def quick_sort(array):
    if len(array) < 2:
        return array
    else:
        pivot = array[0]
        less = [i for i in array[1:] if i <= pivot]

        greater = [i for i in array[1:] if i > pivot]

        return quick_sort(less) + [pivot] + quick_sort(greater)

print(quick_sort([1, -1, -13, 4, 23]))